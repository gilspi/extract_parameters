# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 482)
        MainWindow.setStyleSheet("/* Общие настройки для виджетов */\n"
"QWidget {\n"
"    background-color: #f0f0f0; /* Светлый фон */\n"
"    color: #333333; /* Темный текст */\n"
"    font-family: Arial, sans-serif; /* Шрифт */\n"
"    font-size: 14px; /* Размер шрифта */\n"
"}\n"
"\n"
"/* Кнопки */\n"
"QPushButton {\n"
"    background-color: #007acc; /* Синий цвет кнопок */\n"
"    color: white; /* Белый текст */\n"
"    border: none; /* Без рамки */\n"
"    border-radius: 5px; /* Закругленные углы */\n"
"    font-size: 14px; /* Размер шрифта кнопки */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #005f99; /* Более темный синий при наведении */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #004080; /* Темный синий при нажатии */\n"
"}\n"
"\n"
"/* Поля ввода текста */\n"
"QLineEdit, QTextEdit {\n"
"    background-color: #ffffff; /* Белое поле ввода */\n"
"    color: #333333; /* Темный текст */\n"
"    border: 1px solid #cccccc; /* Светло-серый бордер */\n"
"    border-radius: 5px; /* Закругленные углы */\n"
"    padding: 8px; /* Отступы внутри поля */\n"
"}\n"
"\n"
"QLineEdit:hover, QTextEdit:hover {\n"
"    border: 1px solid #007acc; /* Синий бордер при наведении */\n"
"}\n"
"\n"
"/* Выпадающие списки и комбобоксы */\n"
"QComboBox {\n"
"    background-color: #ffffff;\n"
"    color: #333333;\n"
"    border: 1px solid #cccccc;\n"
"    border-radius: 5px;\n"
"    padding: 8px;\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    border-left-width: 0px;\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(:/images/down-arrow.png); /* Укажите путь к изображению стрелки вниз */\n"
"}\n"
"\n"
"/* Вкладки */\n"
"QTabWidget::pane { \n"
"   border-top: 2px solid #007acc; \n"
"}\n"
"\n"
"QTabBar::tab { \n"
"   background-color: #f0f0f0; \n"
"   padding: 10px; \n"
"   margin-right: 2px;\n"
"   border-top-left-radius: 5px; \n"
"   border-top-right-radius: 5px;\n"
"}\n"
"\n"
"QTabBar::tab:selected { \n"
"   background-color: #007acc; \n"
"   color: white;\n"
"}\n"
"\n"
"/* Фреймы для графиков и слайдов */\n"
"QFrame {\n"
"    background-color: white; /* Белый фон фрейма */\n"
"    border: 1px solid #cccccc; /* Светло-серый бордер */\n"
"    border-radius: 5px; /* Закругленные углы фрейма */\n"
"    padding: 10px; /* Отступы внутри фрейма */\n"
"}\n"
"\n"
"/* Графики (например, если вы используете QGraphicsView) */\n"
"QGraphicsView {\n"
"    background-color: #ffffff; /* Белый фон графика */\n"
"    border: none; /* Без рамки вокруг графика */\n"
"}\n"
"\n"
"/* Слайды (например, если вы используете QLabel для отображения изображений) */\n"
"QLabel {\n"
"    border-radius: 5px; /* Закругленные углы для слайдов */\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.choose_file_btn = QtWidgets.QPushButton(self.centralwidget)
        self.choose_file_btn.setGeometry(QtCore.QRect(200, 6, 88, 31))
        self.choose_file_btn.setObjectName("choose_file_btn")
        self.log_scale_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        self.log_scale_checkbox.setGeometry(QtCore.QRect(320, 10, 92, 25))
        self.log_scale_checkbox.setObjectName("log_scale_checkbox")
        self.graphics_frame = QtWidgets.QFrame(self.centralwidget)
        self.graphics_frame.setGeometry(QtCore.QRect(320, 50, 451, 381))
        self.graphics_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.graphics_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.graphics_frame.setObjectName("graphics_frame")
        self.graphics_view = QtWidgets.QGraphicsView(self.graphics_frame)
        self.graphics_view.setGeometry(QtCore.QRect(30, 10, 411, 341))
        self.graphics_view.setObjectName("graphics_view")
        self.x_slider = QtWidgets.QSlider(self.graphics_frame)
        self.x_slider.setGeometry(QtCore.QRect(30, 350, 411, 20))
        self.x_slider.setOrientation(QtCore.Qt.Horizontal)
        self.x_slider.setObjectName("x_slider")
        self.y_slider = QtWidgets.QSlider(self.graphics_frame)
        self.y_slider.setGeometry(QtCore.QRect(10, 9, 20, 341))
        self.y_slider.setOrientation(QtCore.Qt.Vertical)
        self.y_slider.setObjectName("y_slider")
        self.scroll_params_area = QtWidgets.QScrollArea(self.centralwidget)
        self.scroll_params_area.setGeometry(QtCore.QRect(10, 50, 281, 211))
        self.scroll_params_area.setWidgetResizable(True)
        self.scroll_params_area.setObjectName("scroll_params_area")
        self.scroll_area_widget_contents = QtWidgets.QWidget()
        self.scroll_area_widget_contents.setGeometry(QtCore.QRect(0, 0, 259, 189))
        self.scroll_area_widget_contents.setObjectName("scroll_area_widget_contents")
        self.scroll_params_area.setWidget(self.scroll_area_widget_contents)
        self.file_name_label = QtWidgets.QLabel(self.centralwidget)
        self.file_name_label.setGeometry(QtCore.QRect(10, 10, 181, 21))
        self.file_name_label.setStyleSheet("/* Общие настройки для виджетов */\n"
"QWidget {\n"
"    background-color: #f0f0f0; /* Светлый фон */\n"
"    color: #333333; /* Темный текст */\n"
"    font-family: Arial, sans-serif; /* Шрифт */\n"
"    font-size: 14px; /* Размер шрифта */\n"
"}\n"
"\n"
"/* Кнопки */\n"
"QPushButton {\n"
"    background-color: #007acc; /* Синий цвет кнопок */\n"
"    color: white; /* Белый текст */\n"
"    border: none; /* Без рамки */\n"
"    border-radius: 5px; /* Закругленные углы */\n"
"    padding: 10px 15px; /* Отступы */\n"
"    font-size: 16px; /* Размер шрифта кнопки */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #005f99; /* Более темный синий при наведении */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #004080; /* Темный синий при нажатии */\n"
"}\n"
"\n"
"/* Поля ввода текста */\n"
"QLineEdit, QTextEdit {\n"
"    background-color: #ffffff; /* Белое поле ввода */\n"
"    color: #333333; /* Темный текст */\n"
"    border: 1px solid #cccccc; /* Светло-серый бордер */\n"
"    border-radius: 5px; /* Закругленные углы */\n"
"    padding: 8px; /* Отступы внутри поля */\n"
"}\n"
"\n"
"QLineEdit:hover, QTextEdit:hover {\n"
"    border: 1px solid #007acc; /* Синий бордер при наведении */\n"
"}\n"
"\n"
"/* Выпадающие списки и комбобоксы */\n"
"QComboBox {\n"
"    background-color: #ffffff;\n"
"    color: #333333;\n"
"    border: 1px solid #cccccc;\n"
"    border-radius: 5px;\n"
"    padding: 8px;\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    border-left-width: 0px;\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(:/images/down-arrow.png); /* Укажите путь к изображению стрелки вниз */\n"
"}\n"
"\n"
"/* Вкладки */\n"
"QTabWidget::pane { \n"
"   border-top: 2px solid #007acc; \n"
"}\n"
"\n"
"QTabBar::tab { \n"
"   background-color: #f0f0f0; \n"
"   padding: 10px; \n"
"   margin-right: 2px;\n"
"   border-top-left-radius: 5px; \n"
"   border-top-right-radius: 5px;\n"
"}\n"
"\n"
"QTabBar::tab:selected { \n"
"   background-color: #007acc; \n"
"   color: white;\n"
"}\n"
"\n"
"/* Строки таблицы */\n"
"QTableWidget {\n"
"    gridline-color: #cccccc; /* Цвет линий сетки таблицы */\n"
"}\n"
"\n"
"QTableWidget::item {\n"
"    padding: 10px; /* Отступы внутри ячеек таблицы */\n"
"}\n"
"\n"
"/* Строки таблицы при наведении */\n"
"QTableWidget::item:hover {\n"
"    background-color: #e0e0e0; /* Цвет фона при наведении на строку таблицы */\n"
"}")
        self.file_name_label.setText("")
        self.file_name_label.setObjectName("file_name_label")
        self.choose_model_btn = QtWidgets.QPushButton(self.centralwidget)
        self.choose_model_btn.setGeometry(QtCore.QRect(10, 270, 281, 27))
        self.choose_model_btn.setObjectName("choose_model_btn")
        self.accept_changes_btn = QtWidgets.QPushButton(self.centralwidget)
        self.accept_changes_btn.setGeometry(QtCore.QRect(10, 300, 281, 27))
        self.accept_changes_btn.setObjectName("accept_changes_btn")
        self.choose_spice_schema_btn = QtWidgets.QPushButton(self.centralwidget)
        self.choose_spice_schema_btn.setGeometry(QtCore.QRect(10, 330, 281, 27))
        self.choose_spice_schema_btn.setObjectName("choose_spice_schema_btn")
        self.start_simulation_btn = QtWidgets.QPushButton(self.centralwidget)
        self.start_simulation_btn.setGeometry(QtCore.QRect(10, 360, 281, 27))
        self.start_simulation_btn.setObjectName("start_simulation_btn")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(10, 390, 281, 23))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 440, 66, 19))
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuOpen = QtWidgets.QMenu(self.menubar)
        self.menuOpen.setObjectName("menuOpen")
        MainWindow.setMenuBar(self.menubar)
        self.action_parameters_model = QtWidgets.QAction(MainWindow)
        self.action_parameters_model.setObjectName("action_parameters_model")
        self.action_spice_schema = QtWidgets.QAction(MainWindow)
        self.action_spice_schema.setObjectName("action_spice_schema")
        self.menuOpen.addAction(self.action_parameters_model)
        self.menuOpen.addAction(self.action_spice_schema)
        self.menubar.addAction(self.menuOpen.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.choose_file_btn.setText(_translate("MainWindow", "Choose file"))
        self.log_scale_checkbox.setText(_translate("MainWindow", "Log scale"))
        self.choose_model_btn.setText(_translate("MainWindow", "Choose model"))
        self.accept_changes_btn.setText(_translate("MainWindow", "Accept changes"))
        self.choose_spice_schema_btn.setText(_translate("MainWindow", "Choose spice schema"))
        self.start_simulation_btn.setText(_translate("MainWindow", "Start simulation"))
        self.label.setText(_translate("MainWindow", "TextLabel"))
        self.menuOpen.setTitle(_translate("MainWindow", "Open"))
        self.action_parameters_model.setText(_translate("MainWindow", "Parameters_model"))
        self.action_spice_schema.setText(_translate("MainWindow", "SPICE schema"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
